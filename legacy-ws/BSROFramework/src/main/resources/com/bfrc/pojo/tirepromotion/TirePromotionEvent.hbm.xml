<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- Generated Jun 12, 2009 11:31:58 AM by Hibernate Tools 3.2.1.GA -->
<hibernate-mapping>
    <class name="com.bfrc.pojo.tirepromotion.TirePromotionEvent" table="TIRE_PROMOTION_EVENT" schema="TIRE_PROMOTION">
        <id name="promoId" type="long">
            <column name="PROMO_ID" precision="10" scale="0" />
            <generator class="sequence">
            	<param name="sequence">tire_promotion.PROMO_ID_SEQ</param>
            </generator>
        </id>
        <many-to-one name="sourcePromotionType" class="com.bfrc.pojo.tirepromotion.SourcePromotionType" fetch="select">
            <column name="PROMO_TYPE" length="1" not-null="true" />
        </many-to-one>
        <property name="promoName" type="string">
            <column name="PROMO_NAME" length="50" not-null="true" />
        </property>
        <property name="promoValue" type="big_decimal">
            <column name="PROMO_VALUE" precision="15" not-null="true" />
        </property>
        <property name="minQualifierQty" type="byte">
            <column name="MIN_QUALIFIER_QTY" precision="2" scale="0" not-null="true" />
        </property>
        <property name="promoLargeImg" type="org.springframework.orm.hibernate3.support.BlobByteArrayType">
            <column name="PROMO_LARGE_IMG" />
        </property>
        <property name="promoSmallImg" type="org.springframework.orm.hibernate3.support.BlobByteArrayType">
            <column name="PROMO_SMALL_IMG" />
        </property>
        <property name="promoSmallImgText" type="string">
            <column name="PROMO_SMALL_IMG_TEXT" />
        </property>
        <property name="promoSmallImgTooltip" type="string">
            <column name="PROMO_SMALL_IMG_TOOLTIP" length="256" />
        </property>
        <property name="promoDisplayName" type="string">
            <column name="PROMO_DISPLAY_NAME"  not-null="true" />
        </property>
        <property name="promoTotalTag" type="string">
            <column name="PROMO_TOTAL_TAG" />
        </property>
        <property name="promoUrlName" type="string">
            <column name="PROMO_URL_NAME"  />
        </property>
        <property name="promoMainText" type="string">
            <column name="PROMO_MAIN_TEXT" length="4000" />
        </property>
        <property name="promoFooterText" type="string">
            <column name="PROMO_FOOTER_TEXT" length="2000" />
        </property>
        <property name="promoPdf" type="org.springframework.orm.hibernate3.support.BlobByteArrayType">
            <column name="PROMO_PDF" />
        </property>
        <property name="promoPdfText" type="string">
            <column name="PROMO_PDF_TEXT" length="256" />
        </property>
        <property name="statusFlag" type="char">
            <column name="STATUS_FLAG" length="1" not-null="true" />
        </property>
        <property name="lastChangedBy" type="string">
            <column name="LAST_CHANGED_BY" length="50" not-null="true" />
        </property>
        <property name="lastChangedDate" type="timestamp">
            <column name="LAST_CHANGED_DATE" length="7" not-null="true" />
        </property>
        <property name="FCACOffersFlag" type="char">
            <column name="FCAC_OFFERS_FLAG" length="1" />
        </property>
        <property name="ETOffersFlag" type="char">
            <column name="ET_OFFERS_FLAG" length="1" />
        </property>
        <set name="tirePromotionEventHistories" inverse="true">
            <key>
                <column name="PROMO_ID" precision="10" scale="0" not-null="true" />
            </key>
            <one-to-many class="com.bfrc.pojo.tirepromotion.TirePromotionEventHistory" />
        </set>
        <set name="tirePromotionSiteHistories" inverse="true">
            <key>
                <column name="PROMO_ID" precision="10" scale="0" not-null="true" />
            </key>
            <one-to-many class="com.bfrc.pojo.tirepromotion.TirePromotionSiteHistory" />
        </set>
    </class>
    <sql-query name="getTirePromotionEventsWithoutBlobs">
	    <return class="com.bfrc.pojo.tirepromotion.TirePromotionEvent" />
 		     SELECT 
               f.PROMO_ID, f.PROMO_NAME, f.PROMO_TYPE, f.PROMO_VALUE, f.MIN_QUALIFIER_QTY, null as PROMO_LARGE_IMG, null as PROMO_SMALL_IMG, 
               f.PROMO_SMALL_IMG_TEXT, f.PROMO_SMALL_IMG_TOOLTIP, f.PROMO_DISPLAY_NAME, f.PROMO_TOTAL_TAG, f.PROMO_URL_NAME, 
               f.PROMO_MAIN_TEXT, f.PROMO_FOOTER_TEXT, null as PROMO_PDF, f.PROMO_PDF_TEXT, f.STATUS_FLAG, f.LAST_CHANGED_BY, f.LAST_CHANGED_DATE, 
               f.FCAC_OFFERS_FLAG, f.ET_OFFERS_FLAG
            FROM  tire_promotion.TIRE_PROMOTION_EVENT f
	</sql-query>
	<sql-query name="getTirePromotionsBySitesAndStoreNumberWithoutBlobs">
	    <return class="com.bfrc.pojo.tirepromotion.TirePromotionEvent" />
 		    SELECT 
               f.PROMO_ID, f.PROMO_NAME, f.PROMO_TYPE, f.PROMO_VALUE, f.MIN_QUALIFIER_QTY,  null as PROMO_LARGE_IMG, null as PROMO_SMALL_IMG, 
               f.PROMO_SMALL_IMG_TEXT, f.PROMO_SMALL_IMG_TOOLTIP, f.PROMO_DISPLAY_NAME, f.PROMO_TOTAL_TAG, f.PROMO_URL_NAME, 
               f.PROMO_MAIN_TEXT, f.PROMO_FOOTER_TEXT, null as PROMO_PDF, f.PROMO_PDF_TEXT, f.STATUS_FLAG, f.LAST_CHANGED_BY, f.LAST_CHANGED_DATE, 
               f.FCAC_OFFERS_FLAG, f.ET_OFFERS_FLAG
            FROM  tire_promotion.TIRE_PROMOTION_EVENT f, tire_promotion.TIRE_PROMOTION_LOCATION g, tire_promotion.TIRE_PROMOTION_SITE h
            WHERE f.Promo_ID = g.Promo_ID 
                AND f.Promo_ID = h.Promo_ID 
                AND f.Status_Flag = 'P'
                AND TRUNC(sysdate) BETWEEN TRUNC(g.Start_Date) AND TRUNC(g.End_Date)
                AND h.SITE_NAME= :siteName
                AND g.Store_Number = :storeNumber
                AND f.promo_type != 'S'
                ORDER BY f.Promo_Type
	</sql-query>
    <sql-query name="getTirePromotionsBySitesAndStoreNumber">
	    <return class="com.bfrc.pojo.tirepromotion.TirePromotionEvent" />
 		    SELECT 
               f.PROMO_ID, f.PROMO_NAME, f.PROMO_TYPE, f.PROMO_VALUE, f.MIN_QUALIFIER_QTY, f.PROMO_LARGE_IMG, f.PROMO_SMALL_IMG, 
               f.PROMO_SMALL_IMG_TEXT, f.PROMO_SMALL_IMG_TOOLTIP, f.PROMO_DISPLAY_NAME, f.PROMO_TOTAL_TAG, f.PROMO_URL_NAME, 
               f.PROMO_MAIN_TEXT, f.PROMO_FOOTER_TEXT, f.PROMO_PDF, f.PROMO_PDF_TEXT, f.STATUS_FLAG, f.LAST_CHANGED_BY, f.LAST_CHANGED_DATE, 
               f.FCAC_OFFERS_FLAG, f.ET_OFFERS_FLAG
            FROM  tire_promotion.TIRE_PROMOTION_EVENT f, tire_promotion.TIRE_PROMOTION_LOCATION g, tire_promotion.TIRE_PROMOTION_SITE h
            WHERE f.Promo_ID = g.Promo_ID 
                AND f.Promo_ID = h.Promo_ID 
                AND f.Status_Flag = 'P'
                AND TRUNC(sysdate) BETWEEN TRUNC(g.Start_Date) AND TRUNC(g.End_Date)
                AND h.SITE_NAME= :siteName
                AND g.Store_Number = :storeNumber
                ORDER BY f.Promo_Type
	</sql-query>
	<sql-query name="getDiscountAmountByStoreNumberMinQtyPromoId">
	 <return-scalar column="Discount_Amount" type="big_decimal"/>
	 <return-scalar column="Article" type="long"/>
	  <![CDATA[
	   SELECT CASE WHEN i.REDUCE_PRICE_FLAG = 'N' THEN 0 ELSE
       CASE f.Promo_Type WHEN 'P' THEN a.Retail_Price * f.PROMO_VALUE / 100
       WHEN 'D' THEN f.PROMO_VALUE END END as Discount_Amount, a.Article as Article
       FROM rtms_webdb.TP_Tire_Price a, rtms_webdb.TP_Store_List b,
           tire_promotion.TIRE_PROMOTION_EVENT f, tire_promotion.TIRE_PROMOTION_LOCATION g, tire_promotion.TIRE_PROMOTION_ARTICLE h,
           tire_promotion.SOURCE_PROMOTION_TYPE i
       WHERE a.Price_Book_ID = b.Price_Book_ID
           AND a.article = h.article AND b.Store_Number = g.Store_Number
           AND f.Promo_ID = g.Promo_ID AND f.Promo_ID = h.Promo_ID
           AND f.Promo_Type = i.Promo_Type
           AND f.Status_Flag = 'P'
           AND TRUNC(sysdate) BETWEEN TRUNC(g.Start_Date) AND TRUNC(g.End_Date)
           AND a.Article = :article
           AND b.Store_Number = :storeNumber
           AND f.MIN_QUALIFIER_QTY <= :minQty
           AND f.Promo_ID= :promoId
     ]]>
    </sql-query>
    <sql-query name="getTirePromotionsBySiteAndStatus">
	    <return class="com.bfrc.pojo.tirepromotion.TirePromotionEvent" />
 		    SELECT 
 		      j.PROMO_ID, j.PROMO_NAME, j.PROMO_TYPE, j.PROMO_VALUE, j.MIN_QUALIFIER_QTY, null as PROMO_LARGE_IMG, null as PROMO_SMALL_IMG, 
               j.PROMO_SMALL_IMG_TEXT, j.PROMO_SMALL_IMG_TOOLTIP, j.PROMO_DISPLAY_NAME, j.PROMO_TOTAL_TAG, j.PROMO_URL_NAME, 
               j.PROMO_MAIN_TEXT, j.PROMO_FOOTER_TEXT, j.PROMO_PDF, j.PROMO_PDF_TEXT, j.STATUS_FLAG, j.LAST_CHANGED_BY, j.LAST_CHANGED_DATE, 
               j.FCAC_OFFERS_FLAG, j.ET_OFFERS_FLAG
              from tire_promotion.TIRE_PROMOTION_EVENT j where j.Promo_ID in
            (select distinct f.Promo_ID
            FROM  tire_promotion.TIRE_PROMOTION_EVENT f, tire_promotion.TIRE_PROMOTION_LOCATION g, tire_promotion.TIRE_PROMOTION_SITE h
            WHERE f.Promo_ID = g.Promo_ID 
                AND f.Promo_ID = h.Promo_ID 
                AND f.Status_Flag = :statusFlag
                AND TRUNC(sysdate) BETWEEN TRUNC(g.Start_Date) AND TRUNC(g.End_Date)
                AND h.SITE_NAME= :siteName
                )
	</sql-query>
	
	<sql-query name="getActiveTirePromotionsBySiteAndStatus">
	    <return class="com.bfrc.pojo.tirepromotion.TirePromotionEvent" />
 		    SELECT 
 		      j.PROMO_ID, j.PROMO_NAME, j.PROMO_TYPE, j.PROMO_VALUE, j.MIN_QUALIFIER_QTY, null as PROMO_LARGE_IMG, null as PROMO_SMALL_IMG, 
               j.PROMO_SMALL_IMG_TEXT, j.PROMO_SMALL_IMG_TOOLTIP, j.PROMO_DISPLAY_NAME, j.PROMO_TOTAL_TAG, j.PROMO_URL_NAME, 
               j.PROMO_MAIN_TEXT, j.PROMO_FOOTER_TEXT, j.PROMO_PDF, j.PROMO_PDF_TEXT, j.STATUS_FLAG, j.LAST_CHANGED_BY, j.LAST_CHANGED_DATE, 
               j.FCAC_OFFERS_FLAG, j.ET_OFFERS_FLAG
              from tire_promotion.TIRE_PROMOTION_EVENT j where j.Promo_ID in
            (select distinct f.Promo_ID
            FROM  tire_promotion.TIRE_PROMOTION_EVENT f, tire_promotion.TIRE_PROMOTION_LOCATION g, tire_promotion.TIRE_PROMOTION_SITE h
            WHERE f.Promo_ID = g.Promo_ID 
                AND f.Promo_ID = h.Promo_ID 
                AND f.Status_Flag = :statusFlag
                AND TRUNC(:startDate) BETWEEN TRUNC(g.Start_Date) AND TRUNC(g.End_Date)
                AND h.SITE_NAME= :siteName
                )
	</sql-query>
	
	<sql-query name="getSpecialTirePromotionEvent">
	    <return class="com.bfrc.pojo.tirepromotion.TirePromotionEvent" />
 		    SELECT 
               j.PROMO_ID, j.PROMO_NAME, j.PROMO_TYPE, j.PROMO_VALUE, j.MIN_QUALIFIER_QTY,  null as PROMO_LARGE_IMG, null as PROMO_SMALL_IMG, 
               j.PROMO_SMALL_IMG_TEXT, j.PROMO_SMALL_IMG_TOOLTIP, j.PROMO_DISPLAY_NAME, j.PROMO_TOTAL_TAG, j.PROMO_URL_NAME, 
               j.PROMO_MAIN_TEXT, j.PROMO_FOOTER_TEXT, null as PROMO_PDF, j.PROMO_PDF_TEXT, j.STATUS_FLAG, j.LAST_CHANGED_BY, j.LAST_CHANGED_DATE, 
               j.FCAC_OFFERS_FLAG, j.ET_OFFERS_FLAG
            FROM tire_promotion.TIRE_PROMOTION_EVENT j
            WHERE EXISTS
         	(
         		SELECT 'X'         	
             	FROM
                  tire_promotion.TIRE_PROMOTION_LOCATION g,
                  tire_promotion.TIRE_PROMOTION_SITE h,
                  tire_promotion.TIRE_PROMOTION_ARTICLE a
            	WHERE     j.Promo_ID = g.Promo_ID
                  	AND g.Promo_ID = h.Promo_ID
                  	AND h.promo_id = a.promo_id
                  	AND j.Status_Flag = 'P'
                  	AND TRUNC(SYSDATE) BETWEEN TRUNC (g.Start_Date) AND TRUNC (g.End_Date)
                	AND h.SITE_NAME= :siteName
               	 	AND g.Store_Number = :storeNumber
                	AND j.promo_type = 'S'
                	AND a.article in (:articleIds)                	
             )
	</sql-query>
</hibernate-mapping>
