package com.bfrc.dataaccess.model.quote;
// Generated Sep 7, 2012 5:06:59 PM by Hibernate Tools 3.1.0.beta4



/**
 * QuoteType generated by hbm2java
 */

public class QuoteType  implements java.io.Serializable {


    // Fields    

     private Long quoteTypeId;
     private String friendlyId;
     private String name;

    // Constructors

    /** default constructor */
    public QuoteType() {
    }
   
    // Property accessors

    public Long getQuoteTypeId() {
        return this.quoteTypeId;
    }
    
    public void setQuoteTypeId(Long quoteTypeId) {
        this.quoteTypeId = quoteTypeId;
    }

    public String getFriendlyId() {
        return this.friendlyId;
    }
    
    public void setFriendlyId(String friendlyId) {
        this.friendlyId = friendlyId;
    }

    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((friendlyId == null) ? 0 : friendlyId.hashCode());
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		result = prime * result + ((quoteTypeId == null) ? 0 : quoteTypeId.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		QuoteType other = (QuoteType) obj;
		if (friendlyId == null) {
			if (other.friendlyId != null)
				return false;
		} else if (!friendlyId.equals(other.friendlyId))
			return false;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		if (quoteTypeId == null) {
			if (other.quoteTypeId != null)
				return false;
		} else if (!quoteTypeId.equals(other.quoteTypeId))
			return false;
		return true;
	}
}
